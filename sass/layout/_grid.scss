.row {
    // for this value we need rem so 10px is already defined as 1rem
    // width: 1140px $grid-width: 114rem;
    max-width: $grid-width;
    // max-width means if we have enough available space then it will have the width that we specified
    // but if there is not enough width, so basically if the viewport is smaller than the width we specified here
    // if the viewport is smaller than 114rem, then it will fill 100% of the available space that is has
    background-color: #eee;

    // now to center one block element inside another block element
    //center this row in the viewport
    margin: 0 auto;
    font-size: 2rem;
    color: #eee;
    //background: greenyellow;

    &:not(:last-child) {
        //.row:not(:last-child())
        margin-bottom: $gutter-vertical;

        // in here we are applying margin-bottom to all rows 
        // except the last child
    }

    @include clearfix;

    // use attribute selector, ^ select only the ones that start with col-
    // [class^="col-"] select any class that starts with "col-"
    // [class*="col-"] has "col-" in anyplace inside the class name
    // [class$="col-"] select any class that ends with "col-"  
    [class^="col-"] {
        background-color: orangered;
        float: left;

        &:not(:last-child) {
            margin-right: $gutter-horizontal;
        }
    }

    .col-1-of-2 {
        //The 100% is the whole width of the element that we want to split into two columns. 
        // (from 100% element - accumulated_leftmargin) / 2 
        width: calc((100% - #{$gutter-horizontal}) / 2);
    }

    .col-1-of-3 {
        // 3 blocks have 2 spaces 2 * #{$gutter-horizontal}
        width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
    }

    .col-2-of-3 { // 2(1-of3)+1left-margin
        width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
    }

    .col-1-of-4 { // 4 block have 3 spaces
        width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
    }

    .col-2-of-4 {
        width: calc(2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
    }

    .col-3-of-4 { // 3(1-of-4) + 2 left-margins
        width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal});
    }
}