//row has collapsed because its elements are floated
//so we use the standard clear

@mixin clearfix {
    &::after {
        //.row::after {}
        content: '';
        display: table;
        clear: both;
    }
}

// this.... complete
@mixin absCenter {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

// MEDIA QUERY MANAGER

/*
0 - 600px: phone
600 - 900px: tablet portrait
900 - 1200px: tablet landscape
[1200 - 1800] is where our normal styles apply
1800px + : big desktop

$breakpoint argument choices:
- phone
- tab-port
- tab-land
- big-desktop

1em = 16px

ems and rems are not affected by a root font size setting like html {font-size: 62.5%;} in media queries, 1rem or 1em in a media query is always equal to the font size which is coming from the browser and that's by default 16px

we use here em instead of rem because they work better in most browsers

Media queries order: Base + typography > general layout + grid > page layout > components

*/
@mixin respond($breakpoint) {
    @if $breakpoint==phone {
        @media only screen and (max-width: 37.5em) {
            // 600px * (1em / 16px) = 37.5em
            @content;
        }
    }

    @if $breakpoint==tab-port {
        @media only screen and (max-width: 56.25em) {
            // 900px * (1em / 16px) = 65.25em
            @content;
        }
    }

    @if $breakpoint==tab-land {
        @media only screen and (max-width: 75em) {
            // 1200px * (1em / 16px) = 75em
            @content;
        }
    }

    @if $breakpoint==big-desktop {
        @media only screen and (min-width: 112.5em) {
            // 1800px * (1em / 16px) = 112.5em
            @content;
        }
    }
}

// @mixin respond-phone {

//     this work with _base.scss in the html{}
//     @media (max-width: 600px) {
//         @content; //this content directive allow us to pass a block of code to a mixin
//     }
// }