@keyframes moveInLeft {
  /* animation start */
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  /* any point in the animation */
  80% {
    transform: translateX(1rem); }
  /* animation end */
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

/*! basic reset */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit; }

/* set the root font size never user px here is bad practice*/
html {
  /* font-size: 100%; */
  /*todo>> this percentage translates a font size given by the browser*/
  /* 100% means if the user doesn't change anything this means the font-size will be 16px the absolute default*/
  /* so we want 10px this 10/16=0.625 or 62.5% */
  font-size: 62.5%; }

body {
  box-sizing: border-box; }

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: #777;
  padding: 3rem;
  box-sizing: border-box; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /* to fix a little shaking that happens */
  backface-visibility: hidden;
  margin-bottom: 6rem; }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    animation-duration: 5s;
    /* animation-delay: 1s; */
    /* animation-iteration-count: 3; */
    animation-timing-function: ease-out; }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    animation: moveInRight 5s ease-out; }

.btn {
  /*  The :link selector is used to select unvisited links.
    Note: The :link selector does not style links you have already visited.  */
  /*! this is like .btn {}*/
  /* when click is the active */
  /* 
    here ::after acts like a virtual element right after the element we are selecting */ }
  .btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    transition: all .2s;
    position: relative;
    font-size: 1.6rem; }
  .btn--white {
    background-color: #fff;
    color: #777; }
    .btn--white::after {
      background-color: #fff; }
  .btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
    /*! box-shadow: X Y Blur */ }
    .btn:hover::after {
      transform: scaleX(1.5) scaleY(1.6);
      opacity: 0; }
  .btn:active {
    transform: translateY(-1px);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }
  .btn::after {
    content: '';
    display: inline-block;
    /* because the btn is also inline-block*/
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s; }
  .btn--animated {
    /*0.75 is animation-delay*/
    animation: moveInBottom .5s ease-out 0.75s;
    /* animation-fill-mode: backwards applies the styles from 0% before the animation starts */
    animation-fill-mode: backwards; }

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  /*background-position: top; ensures that the top of the image stays at the top of the container*/
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  /** polygon(x y, x y, x y) */
  position: relative; }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    position: absolute;
    top: 40%;
    /* this ones position the box element top0 left0*/
    left: 50%;
    transform: translate(-50%, -50%);
    /*this is in relation to the element itself*/
    /* -50% of the element's height to the top*/
    text-align: center; }
